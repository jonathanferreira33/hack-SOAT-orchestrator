services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: fiapdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123
    ports:
      - "3306:3306"
    volumes:
      - ./local/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    restart: unless-stopped

  orchestrator:
    build:
      context: ../
      dockerfile: Dockerfile
    container_name: orchestrator
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - app-network
    restart: unless-stopped

  auth:
    build:
      context: ../../Hackaton-auth
      dockerfile: Dockerfile
    container_name: auth
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/authdb
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  frame_extractor_service:
    build:
      context: ../../Hackaton-frame-extractor-service
      dockerfile: Dockerfile
    container_name: frame_extractor_service
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - rabbitmq
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/fiapdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: fiapuser
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
